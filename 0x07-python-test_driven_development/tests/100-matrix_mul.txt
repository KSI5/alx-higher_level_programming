def test_matrix_mul():
    # Test empty matrices
    try:
        matrix_mul([], [[1, 2], [3, 4]])
    except ValueError as e:
        assert str(e) == "Both m_a and m_b cannot be empty"

    # Test invalid matrix types
    try:
        matrix_mul("matrix", [[1, 2], [3, 4]])
    except ValueError as e:
        assert str(e) == "Both m_a and m_b must be lists"

    # Test invalid matrix element types
    try:
        matrix_mul([[1, 2], [3, '4']], [[5, 6], [7, 8]])
    except ValueError as e:
        assert str(e) == "Both m_a and m_b should contain only integers or floats"

    # Test different-sized rows
    try:
        matrix_mul([[1, 2], [3, 4]], [[5, 6, 7], [8, 9, 10]])
    except ValueError as e:
        assert str(e) == "Rows of m_a and m_b must have the same size"

    # Test incompatible matrix dimensions
    try:
        matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8], [9, 10]])
    except ValueError as e:
        assert str(e) == "m_a and m_b cannot be multiplied"

    # Test valid matrix multiplication
    result = matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
    assert result == [[19, 22], [43, 50]]

    print("All tests passed!")


if __name__ == "__main__":
    test_matrix_mul()
